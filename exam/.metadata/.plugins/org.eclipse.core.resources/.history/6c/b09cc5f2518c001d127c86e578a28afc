package com.example.exam.controller;

import java.util.List;
import java.util.Objects;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import com.example.exam.entity.Product;
import com.example.exam.repository.productRepository;
import com.example.exam.service.SequenceGeneratorService;


@RestController
@CrossOrigin("*")
@RequestMapping("product")
public class productController {
	
	@Autowired
	productRepository productRepository;
	
	
	@PostMapping("addProduct")
	public Product addProduct(@Validated @RequestBody Product product) {
		product.setId(SequenceGeneratorService.generateSequence(Product.SEQUENCE_NAME));
		return productRepository.save(product);
		
	}
	
	@GetMapping("showProduct")
	public List<Product> showProduct() {
		return productRepository.findAll();
		}
	
	@PutMapping("updateProduct/{id}")
	public void updateProduct(@PathVariable long id, @RequestBody Product product) {
		Product pro = productRepository.findById(id).get();
		 if (Objects.nonNull(department.getDepartmentName())
		            && !"".equalsIgnoreCase(
		                department.getDepartmentName())) {
		            depDB.setDepartmentName(
		                department.getDepartmentName());
		        }
		 
		        if (Objects.nonNull(
		                department.getDepartmentAddress())
		            && !"".equalsIgnoreCase(
		                department.getDepartmentAddress())) {
		            depDB.setDepartmentAddress(
		                department.getDepartmentAddress());
		        }
		 
		        if (Objects.nonNull(department.getDepartmentCode())
		            && !"".equalsIgnoreCase(
		                department.getDepartmentCode())) {
		            depDB.setDepartmentCode(
		                department.getDepartmentCode());
		        }
		 
		        return departmentRepository.save(depDB);
		    }  
		
	}
	

}
